获取对象信息

1.
判断对象类型，使用type()函数

2.
判断基本数据类型可以直接写int，str等，但如果要判断一个对象是否是函数怎么办？可以使用types模块中定义的常量：

>>> import types
>>> def fn():
...     pass
...
>>> type(fn)==types.FunctionType
True
>>> type(abs)==types.BuiltinFunctionType
True
>>> type(lambda x: x)==types.LambdaType
True
>>> type((x for x in range(10)))==types.GeneratorType
True

3.
isinstance还可以判断一个变量是否是某些类型中的一种：
>>> isinstance([1, 2, 3], (list, tuple))
True
>>> isinstance((1, 2, 3), (list, tuple))
True

4.
现在我知道的python判断数据类型有两种，type和isinstance

5.
dir()函数：如果要获得一个对象的所有属性和方法，可以使用dir()函数，它返回一个包含字符串的list

6.
类似__xxx__的属性和方法在Python中都是有特殊用途的，比如__len__方法返回长度。在Python中，如果你调用len()函数试图获取一个对象的长度，实际上，在len()函数内部，它自动去调用该对象的__len__()方法，所以，下面的代码是等价的：
>>> len('ABC')
3
>>> 'ABC'.__len__()
3

7.
getattr()、setattr()以及hasattr()

8.
s = Student() # 创建实例s